@page "/"
@using MudBlazor;
@using RefuseManagementPortal.Service;
@using RefuseManagementPortal.Models;
@using System.Net.Http.Json;

<MudGrid Spacing="10">
    <MudItem lg="6">
        <MudCard Class="d-flex align-center justify-center mud-width-full py-8"
                 Elevation="8">
            <MudCardHeader>
                <CardHeaderContent>
                    <MudText Typo="Typo.h3">Fleet Status</MudText>
                </CardHeaderContent>
            </MudCardHeader>
            <MudChart ChartType="MudBlazor.ChartType.Donut" ChartOptions="chartColors" InputData="@data" InputLabels="@labels">
                <CustomGraphics>
                    <text class="donut-inner-text" x="50%" y="40%" dominant-baseline="middle" text-anchor="middle" fill="black" font-family="Helvetica" font-size="3">Available Trucks</text>
                    <text class="donut-inner-text" x="50%" y="54%" dominant-baseline="middle" text-anchor="middle" fill="black" font-family="Helvetica" font-size="5">@availableTrucks</text>
                </CustomGraphics>
            </MudChart>
        </MudCard>
    </MudItem>

    <MudItem lg="6">
        <MudGrid Justify="Justify.FlexStart"
                 Spacing="10">
            @if (!(testList is null))
            {            @foreach (var record in testList)
                {
                    <MudItem lg="6">
                        <MudCard Class="d-flex align-center justify-end mud-width-full py-8"
                                 Elevation="8">
                            <MudCardHeader>
                                <CardHeaderContent>
                                    <MudText>Truck Number: @record.truckNumber</MudText>
                                </CardHeaderContent>
                            </MudCardHeader>
                            <MudCardContent>
                                <MudText>Service Area: @record.serviceArea</MudText>
                                <MudText>Route: @record.route</MudText>
                                <MudText>Refuse Type: @record.refuseType</MudText>
                            </MudCardContent>
                        </MudCard>
                    </MudItem>
                }
            }
        </MudGrid>
    </MudItem>
</MudGrid>







    Welcome to your new app.🚛
@code {

    // Fields
    private List<DispatchRecord> testList;
    private DataBaseConnection connection = new();

    // Properties


    private double[] data = { (100 / 25) * 12, (100 / 25) * 8, (100 / 25) * 4 };
    private string[] labels = { "Available", "Dispatched", "Need Maintenance" };

    private int availableTrucks = 12;

    MudBlazor.ChartOptions chartColors = new()
        {
            ChartPalette = new string[] { "#009112", "#cc9801", "#e20000" }
        };

    protected override async Task OnInitializedAsync()
    {
        testList = await connection.GetDispatchRecordsAsync();
    }



}