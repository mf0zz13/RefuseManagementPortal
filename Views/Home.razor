@page "/"
@using MudBlazor;
@using RefuseManagementPortal.Service;
@using RefuseManagementPortal.Models;
@using System.Net.Http.Json;
@inject HttpClient client;

<MudGrid Spacing="200">
    <MudItem xs="6">
        <MudCard Class="d-flex align-center justify-center mud-width-full py-8"
                 Elevation="8">
            <MudCardHeader>
                <CardHeaderContent>
                    <MudText Typo="Typo.h3">Fleet Status</MudText>
                </CardHeaderContent>
            </MudCardHeader>
            <MudChart ChartType="MudBlazor.ChartType.Donut" ChartOptions="chartColors" InputData="@data" InputLabels="@labels">
                <CustomGraphics>
                    <text class="donut-inner-text" x="50%" y="40%" dominant-baseline="middle" text-anchor="middle" fill="black" font-family="Helvetica" font-size="3">Available Trucks</text>
                    <text class="donut-inner-text" x="50%" y="54%" dominant-baseline="middle" text-anchor="middle" fill="black" font-family="Helvetica" font-size="5">@availableTrucks</text>
                </CustomGraphics>
            </MudChart>
        </MudCard>
    </MudItem>

    <MudItem xs="6">
        <MudStack Class="d-flex align-center justify-end mud-width-full py-8">
            @foreach (var item in testList)
            {
                <MudCard>
                    <MudCardHeader>
                    <CardHeaderContent>
                        <MudText>@($"{item.date}\n{item.temperatureC}\n{item.temperatureF}\n{item.summary}") </MudText>
                    </CardHeaderContent>
                </MudCardHeader>
            </MudCard>
            }
        </MudStack>
    </MudItem>
</MudGrid>







    Welcome to your new app.🚛
@code {

    // Fields
    private List<Weather>? testList;
    private DataBaseConnection connection = new();

    // Properties


    private double[] data = { (100 / 25) * 12, (100 / 25) * 8, (100 / 25) * 4 };
    private string[] labels = { "Available", "Dispatched", "Need Maintenance" };

    private int availableTrucks = 12;

    MudBlazor.ChartOptions chartColors = new()
        {
            ChartPalette = new string[] { "#009112", "#cc9801", "#e20000" }
        };

    protected override async Task OnInitializedAsync()
    {
        testList = await GetWeatherAsync();
    }

    async Task<List<Weather>> GetWeatherAsync()
    {

        const string _baseUrl = @"https://webapplication1apimanagementservice.azure-api.net";
        const string _newsEndpoint = "WeatherForecast";

        return await client.GetFromJsonAsync<List<Weather>>(@"https://webapplication1apimanagementservice.azure-api.net/weatherforecast") ?? new List<Weather>();
        
        // HttpClient httpClient = new();

        // var response = await httpClient.GetFromJsonAsync<List<Weather>>("https://webapplication1apimanagementservice.azure-api.net/WeatherForecast");

        // return response;
    }

    public struct Weather
    {
        public DateTime date { get; set; }
        public int temperatureC { get; set; }
        public int temperatureF { get; set; }
        public required string summary { get; set; }
    }

}